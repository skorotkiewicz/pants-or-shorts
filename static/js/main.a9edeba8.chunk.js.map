{"version":3,"sources":["components/Widget.jsx","components/Input.jsx","components/Weather.jsx","App.jsx","index.js"],"names":["Widget","data","short","sunny","desc","fl","FeelsLikeC","ws","windspeedKmph","weatherDesc","map","e","value","className","Input","city","setData","setCity","setLoading","setChange","getWeather","type","placeholder","onChange","target","onClick","fetch","then","res","json","current_condition","nearest_area","areaName","Weather","useState","loading","change","useEffect","App","href","rel","ReactDOM","render","document","getElementById"],"mappings":"kMA4CeA,EA1CA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,GAAQ,EACRC,GAAQ,EACRC,EAAO,GAEPC,EAAKJ,EAAKK,WACVC,EAAKN,EAAKO,cAuBd,OAtBSP,EAAKQ,YAGXC,KAAI,SAACC,GACU,UAAZA,EAAEC,QACJT,GAAQ,EACRC,GAAQO,EAAEC,UAKZV,EADEG,EAAK,GAAKE,EAAK,IAERF,EAAK,IAAME,EAAK,KAEhBF,EAAK,IAAME,EAAK,OAEhBF,EAAK,IAAME,EAAK,IAAMJ,KAO/B,yBAAKU,UAAU,UACb,4BAAKV,EAAQ,QAAUC,GACvB,wBAAIS,UAAU,SACXX,EAAQ,oBAAsB,oBAEjC,yBAAKW,UAAU,MAAf,eACeR,EADf,uBACwCE,EADxC,WCPSO,EA5BD,SAAC,GAOR,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEA,OACE,oCACE,2BACEC,KAAK,OACLC,YAAaP,EACbQ,SAAU,SAACZ,GAAD,OAAOM,EAAQN,EAAEa,OAAOZ,UAEpC,4BACEa,QAAS,WACPL,EAAWL,EAAMC,EAASC,EAASC,GACnCA,GAAW,GACXC,GAAU,KAJd,YCbAC,EAAa,SAACL,EAAMC,EAASC,EAASC,GAC1CQ,MAAM,kBAAD,OAAmBX,EAAnB,eACFY,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC1B,GACLe,EAAQf,EAAK6B,kBAAkB,IAC/Bb,EAAQhB,EAAK8B,aAAa,GAAGC,SAAS,GAAGpB,OACzCM,GAAW,OAqDFe,EAjDC,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbnB,EADa,KACPE,EADO,OAEIiB,mBAAS,IAFb,mBAEbjC,EAFa,KAEPe,EAFO,OAGUkB,oBAAS,GAHnB,mBAGbC,EAHa,KAGJjB,EAHI,OAIQgB,oBAAS,GAJjB,mBAIbE,EAJa,KAILjB,EAJK,KAiBpB,OAXAkB,qBAAU,WAERX,MAAM,6BACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC1B,GACLe,EAAQf,EAAK6B,kBAAkB,IAC/Bb,EAAQhB,EAAK8B,aAAa,GAAGC,SAAS,GAAGpB,OACzCM,GAAW,QAEd,IAGD,oCACGjB,IAASkC,EAAU,kBAAC,EAAD,CAAQlC,KAAMA,IAAW,8CAC7C,yBAAKY,UAAU,WACXuB,IAAWD,GACX,oCACGpB,EADH,KAEE,4BACEU,QAAS,WACPN,GAAU,KAFd,gBAUHiB,GACC,kBAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,WAAYA,OC5BTkB,EAvBH,WACV,OACE,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,UACb,+DAEF,kBAAC,EAAD,MACA,yBAAKA,UAAU,QAAf,4BAC4B,IAC1B,uBACE0B,KAAK,8DACLf,OAAO,SACPgB,IAAI,uBAHN,iBAOA,6BATF,sFCNNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a9edeba8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Widget = ({ data }) => {\n  let short = false;\n  let sunny = false;\n  let desc = \"\";\n\n  let fl = data.FeelsLikeC;\n  let ws = data.windspeedKmph;\n  let wd = data.weatherDesc;\n\n  // eslint-disable-next-line array-callback-return\n  wd.map((e) => {\n    if (e.value === \"Sunny\") {\n      sunny = true;\n      desc += e.value;\n    }\n  });\n\n  if (fl > 5 && ws < 1) {\n    short = true;\n  } else if (fl > 10 && ws < 19) {\n    short = true;\n  } else if (fl > 20 && ws < 28) {\n    short = true;\n  } else if (fl > 12 && ws < 28 && sunny) {\n    short = true;\n  } else {\n    short = false;\n  }\n\n  return (\n    <div className=\"widget\">\n      <h2>{sunny ? \"Sunny\" : desc}</h2>\n      <h1 className=\"pants\">\n        {short ? \"Is shorts weather\" : \"Is pants weather\"}\n      </h1>\n      <div className=\"fl\">\n        Feels like: {fl} &deg;C | Windspeed: {ws} Km/h\n      </div>\n    </div>\n  );\n};\n\nexport default Widget;\n","import React from \"react\";\n\nconst Input = ({\n  city,\n  setData,\n  setCity,\n  setLoading,\n  setChange,\n  getWeather,\n}) => {\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder={city}\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          getWeather(city, setData, setCity, setLoading);\n          setLoading(true);\n          setChange(false);\n        }}\n      >\n        Change\n      </button>\n    </>\n  );\n};\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport Widget from \"./Widget\";\nimport Input from \"./Input\";\n\nconst getWeather = (city, setData, setCity, setLoading) => {\n  fetch(`http://wttr.in/${city}?format=j1`)\n    .then((res) => res.json())\n    .then((data) => {\n      setData(data.current_condition[0]);\n      setCity(data.nearest_area[0].areaName[0].value);\n      setLoading(false);\n    });\n};\n\nconst Weather = () => {\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [change, setChange] = useState(false);\n\n  useEffect(() => {\n    // fetch(\"http://localhost:3000/test.json\")\n    fetch(\"http://wttr.in/?format=j1\")\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data.current_condition[0]);\n        setCity(data.nearest_area[0].areaName[0].value);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {data && !loading ? <Widget data={data} /> : <h2>Please wait...</h2>}\n      <div className=\"change\">\n        {!change && !loading && (\n          <>\n            {city} |\n            <button\n              onClick={() => {\n                setChange(true);\n              }}\n            >\n              Change City\n            </button>\n          </>\n        )}\n\n        {change && (\n          <Input\n            city={city}\n            setData={setData}\n            setCity={setCity}\n            setLoading={setLoading}\n            setChange={setChange}\n            getWeather={getWeather}\n          ></Input>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport \"./App.css\";\nimport Weather from \"./components/Weather\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>It is pants or shorts weather?</h1>\n      </div>\n      <Weather />\n      <div className=\"idea\">\n        App Idea by: Casey Dulson{\" \"}\n        <a\n          href=\"https://twitter.com/Casey_LeighD/status/1380176301261254658\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @Casey_LeighD\n        </a>\n        <br></br>\"I wish there was an app which could tell you if it is pants or\n        shorts weather.\"\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}